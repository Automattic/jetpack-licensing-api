openapi: 3.0.0

info:
  description: |
    This is the Jetpack Licensing API.
  version: 1.0.0
  title: Jetpack Licensing API
  contact:
    email: atanas.angelov@automattic.com
  license:
    name: GPL 2.0
    url: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'

tags:
  - name: license
    description: Everything regarding licenses.

servers:
  - url: https://public-api.wordpress.com/wpcom/v2/jetpack-licensing/
    description: WordPress API

paths:
  /license:
    get:
      tags:
        - license
      summary: Get the status of a license.
      operationId: licenseStatus
      parameters:
        - name: license_key
          description: Unique license key.
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/LicenseKey'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK. Response body contains the license.
          headers:
            X-Jetpack-Request-Id:
              $ref: '#/components/headers/X-Jetpack-Request-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        '403':
          $ref: '#/components/responses/InvalidRequest'

    post:
      tags:
        - license
      summary: Issue a new license.
      operationId: issueLicense
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  description: Product the license is for.
                  type: string
                  enum:
                    - 'free'
                    - 'personal'
                    - 'premium'
                    - 'professional'
                    - 'jetpack-backup-daily'
                    - 'jetpack-backup-realtime'
                    - 'jetpack-scan'
                    - 'jetpack-anti-spam'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK. Response body contains the newly issued license.
          headers:
            X-Jetpack-Request-Id:
              $ref: '#/components/headers/X-Jetpack-Request-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        '403':
          $ref: '#/components/responses/InvalidRequest'

    delete:
      tags:
        - license
      summary: Revoke a license permanently.
      operationId: revokeLicense
      parameters:
        - name: license_key
          description: Unique license key.
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/LicenseKey'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK. Response body contains the license that was revoked.
          headers:
            X-Jetpack-Request-Id:
              $ref: '#/components/headers/X-Jetpack-Request-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        '403':
          $ref: '#/components/responses/InvalidRequest'
  /product-families:
    get:
      tags:
        - product-families
      summary: Get all the available product families and their products.
      operationId: getProductFamilies
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK. Response body contains product families.
          headers:
            X-Jetpack-Request-Id:
              $ref: '#/components/headers/X-Jetpack-Request-Id'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductFamily'
        '403':
          $ref: '#/components/responses/InvalidRequest'

externalDocs:
  description: Learn more about integrating with this API.
  url: https://github.com/Automattic/jetpack-licensing-api/integration-docs/

components:
  schemas:
    Message:
      type: object
      properties:
        code:
          type: string
          example: 'api_message_code'
        message:
          type: string
          example: 'Human-readable API message.'

    License:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LicenseId'
        key:
          $ref: '#/components/schemas/LicenseKey'
        issued_at:
          type: string
          format: date-time
        revoked_at:
          type: string
          format: date-time

    ProductFamily:
      type: object
      properties:
        name:
          type: string
          example: "Jetpack Backup"
        slug:
          type: string
          example: "jetpack-backup"
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductFamilyProduct'

    ProductFamilyProduct:
      type: object
      properties:
        name:
          type: string
          example: "Jetpack Backup (Daily)"
        slug:
          type: string
          example: "jetpack-backup-daily"

    LicenseId:
      type: integer
      format: int64
      example: 12345

    LicenseKey:
      type: string
      example: 'TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQu'

  headers:
    X-Jetpack-Request-Id:
      description: Unique request id.
      schema:
        type: string
      example: 'TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQu'

  responses:
    NotFound:
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      headers:
        X-Jetpack-Request-Id:
          $ref: '#/components/headers/X-Jetpack-Request-Id'

    InvalidRequest:
      description: Invalid input or insufficient permissions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      headers:
        X-Jetpack-Request-Id:
          $ref: '#/components/headers/X-Jetpack-Request-Id'

    RateLimited:
      description: Bandwidth Limit Exceeded.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      headers:
        X-Jetpack-Request-Id:
          $ref: '#/components/headers/X-Jetpack-Request-Id'

  securitySchemes:
    ApiKeyAuth:
      name: Authorization
      type: apiKey
      in: header
      description: A token will be provided to you when you register as a partner.
